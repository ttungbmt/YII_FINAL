{"version":3,"sources":["@core/components/ReactTable/helpers.js","@core/components/ReactTable/Header.js","@core/components/ReactTable/Body.js","@core/components/ReactTable/Table.js","@core/components/ReactTable/Footer.js","@core/components/ReactTable/SubRow.js","@core/components/ReactTable/index.js","app/main/maps/views/home/index.js"],"names":["parseCols","columns","isArray","map","k","id","as","value","props","newProps","cloneDeep","Header","label","Cell","row","getToggleRowExpandedProps","className","cx","isExpanded","accessor","d","index","style","minWidth","isUndefined","uniqid","headerProps","column","newStyle","width","maxWidth","memo","headerGroups","group","getHeaderGroupProps","headers","getHeaderProps","render","rows","getTableBodyProps","prepareRow","visibleColumns","renderSubRow","onRowClick","i","key","getRowProps","onClick","e","stopPropagation","cells","cell","getCellProps","colSpan","length","ReactTable","responsive","data","defaultColumn","ref","useRef","propTB","useTable","useExpanded","useRowSelect","useEffect","defaultProps","footerGroups","getFooterGroupProps","getFooterProps","url","values","Table","Wrapper","styled","Box","transformData","vnData","get","vietnam","total","confirmed","sumBy","recovered","deaths","current","orderBy","mapValues","groupBy","v","location","wData","takeRight","titles","useImmer","loading","active","item","setItem","baseURL","options","setLoading","bool","state","fn","resps","world","axios","all","then","spread","catch","errors","console","error","scrollable","h100","flex","p","mb","uppercase","fontSize","justifyContent","relative","bold","color","grow","overflow","animated","now"],"mappings":"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","file":"static/js/11.chunk.js","sourcesContent":["import React from 'react'\r\nimport { map, isArray } from '@ttungbmt/utils'\r\nimport { uniqid, isUndefined, isString, cloneDeep } from '@ttungbmt/utils'\r\nimport cx from \"classnames\";\r\n\r\nexport const parseCols = (columns) => {\r\n    return isArray(columns) ? map(columns, ({id, as, value, ...props}, k) => {\r\n        let newProps = cloneDeep(props)\r\n\r\n        newProps.Header = props.label ? props.label : () => null\r\n\r\n        if(as === 'expand'){\r\n            newProps.Cell = ({row}) => (\r\n                <span {...row.getToggleRowExpandedProps()}>\r\n                    <i className={cx({'icon-diff-added': !row.isExpanded, 'icon-diff-removed': row.isExpanded})}/>\r\n            </span>\r\n            )\r\n        }\r\n\r\n        if(as === 'serial'){\r\n            newProps.Header = '#'\r\n            newProps.accessor = props.accessor ? props.accessor : (d, index) => index + 1\r\n            newProps.style = props.style ? props.style : ({minWidth: 57})\r\n        }\r\n\r\n        if(value) newProps.accessor = value\r\n\r\n        return {\r\n            id: isUndefined(newProps.id) || isUndefined(newProps.accessor) ? uniqid() : id,\r\n            ...newProps,\r\n        }\r\n    }) : columns\r\n}","import React, { memo } from 'react'\r\n\r\nfunction Header({headerGroups}) {\r\n    return (\r\n        <thead>\r\n        {headerGroups.map(group => (\r\n            <tr {...group.getHeaderGroupProps()}>\r\n                {group.headers.map(column => (\r\n                    <th {...column.getHeaderProps(headerProps)}>{column.render('Header')}</th>\r\n                ))}\r\n            </tr>\r\n        ))}\r\n        </thead>\r\n    )\r\n}\r\n\r\nconst headerProps = (props, {column}) => {\r\n    let newStyle = column.style ? column.style : {}\r\n\r\n    if (column.minWidth > 0) newStyle.minWidth = column.minWidth\r\n    if (column.width !== 150) newStyle.width = column.width\r\n    if (column.maxWidth < 1000) newStyle.maxWidth = column.maxWidth\r\n\r\n    return {\r\n        ...props,\r\n        style: newStyle\r\n    }\r\n}\r\n\r\nexport default memo(Header)","import React, { memo, Fragment } from 'react'\r\n\r\nfunction Body({rows, getTableBodyProps, prepareRow, visibleColumns, renderSubRow, onRowClick, ...props}) {\r\n    return (\r\n        <tbody {...getTableBodyProps()}>\r\n        {rows.map((row, i) => {\r\n            prepareRow(row)\r\n            return (\r\n                <Fragment key={row.getRowProps().key}>\r\n                    <tr onClick={(e) => {\r\n                        e.stopPropagation()\r\n                        onRowClick && onRowClick(e, row)\r\n                    }}>\r\n                        {row.cells.map(cell => {\r\n                            return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                        })}\r\n                    </tr>\r\n                    {row.isExpanded ? (\r\n                        <tr>\r\n                            <td colSpan={visibleColumns.length}>{renderSubRow ?  renderSubRow(row): ''}</td>\r\n                        </tr>\r\n                    ) : null}\r\n                </Fragment>\r\n            )\r\n        })}\r\n        </tbody>\r\n    )\r\n}\r\n\r\nexport default memo(Body)\r\n","import React, { memo, useEffect, useRef } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Table as BsTable } from 'react-bootstrap'\r\nimport { useTable, useExpanded, useRowSelect } from 'react-table'\r\nimport $ from 'jquery'\r\n\r\nimport { parseCols } from './helpers'\r\nimport Header from './Header'\r\nimport Body from './Body'\r\n\r\n\r\nfunction ReactTable({responsive = 'sm', columns, data, defaultColumn, style, ...props}) {\r\n    const ref = useRef()\r\n    const propTB = useTable({\r\n        columns: parseCols(columns),\r\n        data,\r\n        defaultColumn\r\n    }, useExpanded, useRowSelect)\r\n\r\n    useEffect(() => {\r\n        // console.log(ref.current, $(ref.current));\r\n    }, [])\r\n\r\n    return (\r\n        <BsTable ref={ref} responsive={responsive} className=\"table-basic table table-bordered\" style={style}>\r\n            <Header {...propTB}/>\r\n            <Body\r\n                {...props}\r\n                {...propTB}\r\n            />\r\n        </BsTable>\r\n\r\n    )\r\n}\r\nReactTable.defaultProps = {\r\n    columns: []\r\n}\r\n\r\nReactTable.propTypes = {\r\n    columns: PropTypes.array,\r\n    data: PropTypes.array,\r\n};\r\n\r\nexport default memo(ReactTable)\r\n","import React, { memo } from 'react'\r\n\r\nfunction Footer({footerGroups}) {\r\n    return (\r\n        <thead>\r\n        {footerGroups.map(group => (\r\n            <tr {...group.getFooterGroupProps()}>\r\n                {group.headers.map(column => (\r\n                    <th {...column.getFooterProps()}>{column.render('Footer')}</th>\r\n                ))}\r\n            </tr>\r\n        ))}\r\n        </thead>\r\n    )\r\n}\r\n\r\nexport default memo(Footer)","import React, { memo } from 'react'\r\n\r\nfunction SubRow({url, values, row}) {\r\n    // const { loading, error, data } = useFetch({\r\n    //     url,\r\n    //     data: values\r\n    // }, [])\r\n    //\r\n    //\r\n    // return (\r\n    //     <div>\r\n    //         {error && 'Error!'}\r\n    //         {loading && 'Loading...'}\r\n    //     </div>\r\n    // )\r\n}\r\n\r\nexport default memo(SubRow)\r\n","import Table from './Table'\r\n\r\nexport {default as Header} from './Header'\r\nexport {default as Body} from './Body'\r\nexport {default as Footer} from './Footer'\r\nexport {default as SubRow} from './SubRow'\r\n\r\nexport default Table\r\n","import React, { memo, useEffect } from 'react'\r\nimport * as Space from 'react-spaces'\r\nimport { Box } from '@core/components'\r\nimport ReactTable from '@core/components/ReactTable'\r\nimport { get, sumBy, takeRight, orderBy, groupBy, mapValues } from 'lodash-es'\r\nimport { useImmer } from 'use-immer'\r\nimport { ProgressBar } from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport styled from '@emotion/styled'\r\n\r\nimport dat1 from './dat1.json'\r\nimport dat2 from './dat2.json'\r\nimport dat3 from './dat3.json'\r\n\r\nconst Wrapper = styled(Box)`\r\n    .title {cursor: pointer;}\r\n   .sub-title {\r\n        position: absolute;\r\n        width: 75px;\r\n        right: -80px;\r\n        color: #777;\r\n        font-size: 11px;\r\n        transform: translateY(50%);\r\n   }\r\n   \r\n   .count-content {\r\n        display: flex;\r\n        flex-direction: column;\r\n        .count-number { text-align: center; font-size: 20px; }\r\n        .count-name { text-transform: uppercase; color: #777; font-size: 11px; }\r\n   }\r\n`\r\n\r\nconst transformData = (data) => {\r\n    let vnData = get(data, '0.data')\r\n    let vietnam = {\r\n        total: {\r\n            confirmed: sumBy(vnData, 'number'),\r\n            recovered: sumBy(vnData, 'recovered'),\r\n            deaths: sumBy(vnData, 'deaths'),\r\n        },\r\n        current: orderBy(mapValues(groupBy(vnData, 'address'), (v, k) => ({\r\n            location: k,\r\n            confirmed: sumBy(v, 'number'),\r\n            recovered: sumBy(v, 'recovered'),\r\n            deaths: sumBy(v, 'deaths'),\r\n        })), ['confirmed', 'deaths'], ['desc', 'desc']),\r\n    }\r\n\r\n    let wData = takeRight(data, 2).map(v => get(v, 'data.data')),\r\n        world = {total: wData[0], current: wData[1]}\r\n\r\n    return [vietnam, world]\r\n}\r\n\r\nconst titles = ['Việt nam', 'Thế giới']\r\n\r\nfunction HomePage({}) {\r\n    const [item, setItem] = useImmer({loading: false, data: [], active: 0})\r\n    const active = item.active\r\n\r\n    const baseURL = 'https://cors-anywhere.herokuapp.com/'\r\n    const options = {headers: {'Access-Control-Allow-Origin': '*',}}\r\n\r\n    const fetchData = (fn) => axios.all([\r\n        axios.get(baseURL + 'https://maps.vnpost.vn/app/api/democoronas/?format=json'),\r\n        axios.get(baseURL + 'https://covid2019-api.herokuapp.com/v2/total'),\r\n        axios.get(baseURL + 'https://covid2019-api.herokuapp.com/v2/current'), // https://covid2019-api.herokuapp.com/v2/current\r\n    ], options).then(axios.spread(fn))\r\n\r\n    const setLoading = (bool) => setItem(state => {state.loading = bool})\r\n\r\n    useEffect(() => {\r\n        // const [vietnam, world] = transformData([dat1, dat2, dat3])\r\n        // setItem(state => {\r\n        //     state.data = [vietnam, world]\r\n        // })\r\n        setLoading(true)\r\n        fetchData((...resps) => {\r\n            const [vietnam, world] = transformData(resps)\r\n            setItem(state => {\r\n                state.data = [vietnam, world]\r\n            })\r\n            setLoading(true)\r\n        }).catch(errors => {\r\n            console.error(errors)\r\n            setLoading(false)\r\n        }).then(() => {\r\n            setLoading(false)\r\n        })\r\n\r\n    }, [])\r\n\r\n    const switchActive = () => {\r\n        setItem(state => { state.active = state.active === 0 ? 1 : 0})\r\n    }\r\n\r\n    return (\r\n        <Space.Fill scrollable={true}>\r\n\r\n            <Wrapper h100 flex column>\r\n                <Box p={2}>\r\n                    <Box flex mb={2} uppercase fontSize={20} style={{justifyContent: 'center'}}>\r\n                        <Box flex relative onClick={switchActive} className=\"title\">\r\n                            <Box>{titles[item.active]}</Box>\r\n                            <Box className=\"sub-title\">\r\n                                <div> | {titles[item.active === 0 ? 1 : 0]}</div>\r\n                            </Box>\r\n                        </Box>\r\n                    </Box>\r\n                    <Box flex style={{justifyContent: 'space-around'}} bold>\r\n                        <Box className=\"count-content\">\r\n                            <Box color=\"#3392A1\"\r\n                                 className=\"count-number\">{get(item, `data.${active}.total.recovered`)}</Box>\r\n                            <Box className=\"count-name\">Ca hồi phục</Box>\r\n                        </Box>\r\n                        <Box className=\"count-content\">\r\n                            <Box color=\"#d23e2c\"\r\n                                 className=\"count-number\">{get(item, `data.${active}.total.confirmed`)}</Box>\r\n                            <Box className=\"count-name\">Ca nhiễm</Box>\r\n\r\n                        </Box>\r\n                        <Box className=\"count-content\">\r\n                            <Box color=\"#2d2752\"\r\n                                 className=\"count-number\">{get(item, `data.${active}.total.deaths`)}</Box>\r\n                            <Box className=\"count-name\">Ca tử vong</Box>\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n                <Box grow overflow=\"auto\">\r\n                    {item.loading ? <ProgressBar animated now={100}/> : (\r\n                        <ReactTable\r\n                            columns={[\r\n                                {label: 'Nơi khởi bệnh', value: 'location'},\r\n                                {label: 'Phục hồi', value: 'recovered'},\r\n                                {label: 'Nhiễm bệnh', value: 'confirmed'},\r\n                                {label: 'Tử vong', value: 'deaths'},\r\n                            ]}\r\n                            data={get(item, `data.${active}.current`, [])}\r\n                        />\r\n                    )}\r\n                </Box>\r\n\r\n\r\n            </Wrapper>\r\n        </Space.Fill>\r\n    )\r\n}\r\n\r\nexport default memo(HomePage)\r\n\r\n"],"sourceRoot":""}