{"version":3,"sources":["@core/components/Form/Select.js","@core/components/Form/Input.js","@core/components/Form/Field.js","@core/components/Form/index.js","app/main/maps/ContainerProvider.js","app/main/maps/components/FormModal.js","app/main/maps/components/FormSearch.js","app/main/maps/components/NavList.js","app/main/maps/components/SubTitle.js","app/main/maps/components/BtnTool.js","app/main/maps/components/ToolGroup.js","app/main/maps/components/index.js","app/main/maps/components/Cell.js","app/main/maps/components/ListTable/Header.js","app/main/maps/components/ListTable/Wrapper.js","app/main/maps/components/ListTable/Table.js","app/main/maps/components/ListTable/index.js","app/main/maps/views/cabenh/TableBody.js","app/main/maps/views/cabenh/index.js"],"names":["transOpts","opts","isArray","map","v","k","value","label","useDepDrop","url","depends","ajaxSettings","placeholder","name","control","useFormContext","useEffect","el","get","$","depdrop","loadingText","emptyMsg","memo","register","children","options","props","data","dropProps","omit","Form","Control","as","ref","defaultValue","selected","length","key","setValue","current","datepicker","format","todayBtn","clearBtn","language","autoclose","todayHighlight","on","e","target","useDatepicker","useRef","Select","Input","Group","Label","setFormValues","values","submitForm","selector","trigger","ContainerContext","React","createContext","initForm","page","filter","fields","initialState","show","loading","forms","caseReducer","setLoading","state","payload","createForm","nextPage","prevPage","setShow","setFormData","setFormFields","refreshData","reducer","draft","action","type","useImmerReducer","dispatch","actions","mapValues","fetchFn","acts","fetchData","form","params","axios","then","fetchColumns","p","columns","fetchForm","callback","post","pick","useFetch","getForm","Provider","html","methods","useContext","find","useDidMount","f","useDidUpdate","isEmpty","keys","inputValues","Modal","id","onHide","onEntered","getValues","event","jqXHR","textStatus","maphuong","Header","closeButton","style","padding","borderBottom","Title","className","fontSize","Body","Footer","ButtonGroup","Button","variant","onClick","$form","reset","size","handleSubmit","onSubmit","dm_quan","gt","getCat","dm_phuong","onChange","Row","Col","md","pageQl","items","title","icon","href","Badge","Box","display","width","visible","to","onBtnClick","link","stopPropagation","child","window","open","FirstColCell","model","color","cx","isUndefined","isFunction","index","col","field","attribute","isString","text","styled","div","TableContent","setTimeout","$sbBody","height","css","freezeTable","scrollable","shadow","cloneElement","JSON","stringify","Wrapper","ProgressBar","animated","now","getInfoTotal","recordsFiltered","setOpen","setItem","useDispatch","i","k1","onRowClick","cabenhActs","clickCabenh","cellOptions","geometry","colorRow","phanloai","k2","Cell","KEY","SidebarLayout","defaultValues","query","useQueryString","useState","isOpen","item","useForm","showPopCabenh","subTitle","content","minWidth","contentSize","TreeChart"],"mappings":"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","file":"static/js/6.chunk.js","sourcesContent":["import React, {memo, useEffect, useState} from 'react'\r\nimport { Form } from 'react-bootstrap'\r\nimport { map, get, isArray, omit } from '@ttungbmt/utils'\r\nimport {  useFormContext  } from \"react-hook-form\"\r\nimport $ from 'jquery'\r\nimport 'dependent-dropdown'\r\n\r\nconst transOpts = (opts) => {\r\n    if(!opts) return []\r\n    if(isArray(opts)) return opts\r\n\r\n    return map(opts, (v, k) => ({value: k, label: v}))\r\n}\r\n\r\nconst useDepDrop = ({url, depends, ajaxSettings, placeholder = 'Chọn...', name, ...props}) => {\r\n    const { control } = useFormContext()\r\n    useEffect(() => {\r\n        if(url && depends){\r\n            let el = get(control, `fieldsRef.current.${name}.ref`)\r\n            $(el).depdrop({\r\n                depends,\r\n                url,\r\n                loadingText: 'Đang tải ...',\r\n                placeholder,\r\n                emptyMsg: 'Không có dữ liệu',\r\n                ajaxSettings\r\n            })\r\n        }\r\n    }, [])\r\n}\r\n\r\nfunction Select({register, children, options, ...props}) {\r\n    useDepDrop(props)\r\n    const data = transOpts(options)\r\n    const dropProps = omit(props, ['ajaxSettings'])\r\n\r\n    return (\r\n        <Form.Control as=\"select\" ref={register} {...dropProps} defaultValue={props.selected}>\r\n            {data.length > 1 && <option value=\"\">{props.placeholder}</option>}\r\n            {children}\r\n            {map(data, ({value, label}, k) => (<option key={k} value={value}>{label}</option>))}\r\n        </Form.Control>\r\n    )\r\n}\r\n\r\nexport default memo(Select)","import React, { memo, useEffect, useRef } from 'react'\r\nimport { Form } from 'react-bootstrap'\r\nimport { get, omit } from '@ttungbmt/utils'\r\nimport $ from 'jquery'\r\nimport { useFormContext } from \"react-hook-form\"\r\nimport 'bootstrap-datepicker'\r\nimport 'bootstrap-datepicker/dist/locales/bootstrap-datepicker.vi.min.js'\r\nimport 'bootstrap-datepicker/dist/css/bootstrap-datepicker.min.css'\r\n\r\nfunction useDatepicker({as, name}, ref) {\r\n    const {control, setValue} = useFormContext()\r\n\r\n    useEffect(() => {\r\n        if (as === 'datepicker') {\r\n            ref.current = get(control, `fields.${name}.ref`)\r\n            let options = {\r\n                    format: \"dd/mm/yyyy\",\r\n                    todayBtn: \"linked\",\r\n                    clearBtn: true,\r\n                    language: \"vi\",\r\n                    autoclose: true,\r\n                    todayHighlight: true\r\n                }\r\n\r\n            $(ref.current).datepicker(options).on('changeDate', e => setValue(e.target.value))\r\n        }\r\n\r\n        return () => {\r\n            if (as === 'datepicker') $(ref.current).datepicker('destroy')\r\n        }\r\n    }, [])\r\n\r\n}\r\n\r\nfunction Input({register, children, ...props}) {\r\n    let ref = useRef(props)\r\n\r\n    useDatepicker(props, ref)\r\n\r\n    return (\r\n        <Form.Control ref={register} {...omit(props, ['as'])}>\r\n        </Form.Control>\r\n    )\r\n}\r\n\r\nexport default memo(Input)","import React, {memo} from 'react'\r\nimport { Form } from 'react-bootstrap'\r\nimport {  useFormContext  } from \"react-hook-form\"\r\n\r\nimport Select from './Select'\r\nimport Input from \"./Input\";\r\n\r\nfunction Field({children, label, as, ...props}) {\r\n    const { register } = useFormContext()\r\n\r\n    let Control = () => <></>\r\n\r\n    switch (as){\r\n        case 'select':\r\n            Control = Select\r\n            break\r\n        case 'datepicker':\r\n        case 'input':\r\n            Control = Input\r\n            break\r\n        default:\r\n            Control = Input\r\n            break\r\n    }\r\n\r\n\r\n    return (\r\n        <Form.Group>\r\n            <Form.Label>{label}</Form.Label>\r\n            <Control register={register} {...props} as={as}>\r\n                {children}\r\n            </Control>\r\n        </Form.Group>\r\n    )\r\n}\r\n\r\nexport default memo(Field)\r\n","import {map, get} from '@ttungbmt/utils'\r\nimport $ from 'jquery'\r\n\r\nexport {default as Field} from './Field'\r\n// export {default as FormProvider, FormContext} from './FormProvider'\r\n\r\nexport const setFormValues = (values, {control, register, setValue}) => {\r\n    map(values, (v, k) => {\r\n        if(!get(control, `fieldsRef.current.${k}.ref`)) register(k)\r\n        setValue(k, v)\r\n    })\r\n}\r\n\r\nexport const submitForm = (selector = '#btn-submit-form') => $(selector).trigger('click')\r\n","import React, { memo } from 'react'\r\nimport { useImmerReducer } from 'use-immer'\r\nimport { mapValues, get, pick } from '@ttungbmt/utils'\r\nimport axios from 'axios'\r\n\r\nexport const ContainerContext = React.createContext()\r\n\r\nconst initForm = {\r\n    key: null,\r\n    url: '',\r\n    page: 1,\r\n    values: {},\r\n    data: {},\r\n    filter: '',\r\n    fields: []\r\n}\r\n\r\nconst initialState = {\r\n    show: false,\r\n    loading: false,\r\n    forms: {\r\n\r\n    }\r\n}\r\n\r\nconst caseReducer = {\r\n    setLoading: (state, payload) => {\r\n        state.loading = payload\r\n    },\r\n    createForm: (state, {key, ...props}) => {\r\n        if(!state.forms[key]) {\r\n            state.forms[key] = {...initForm, key, ...props}\r\n        }\r\n    },\r\n    nextPage: (state, {key, ...props}) => {\r\n        state.forms[key].page = state.forms[key].page + 1\r\n    },\r\n    prevPage: (state, {key, ...props}) => {\r\n        state.forms[key].page = state.forms[key].page === 1 ? 1 : state.forms[key].page -1\r\n    },\r\n    setShow: (state, payload) => {\r\n        state.show = payload\r\n    },\r\n    setFormData: (state, {key, data}) => {\r\n        if(key && data) state.forms[key] = {...state.forms[key], ...data}\r\n    },\r\n    setFormValues: (state, {key, values}) => {\r\n        if(state.forms[key]) {\r\n            state.forms[key].values = values\r\n        } else {\r\n            state.forms[key] = {...initForm, key, values}\r\n        }\r\n    },\r\n    setFormFields: (state, {key, fields}) => {\r\n        state.forms[key].fields = fields\r\n    },\r\n    refreshData: (state, {key}) => {\r\n        state.forms[key].page = 1\r\n        state.forms[key].values = {}\r\n    },\r\n}\r\n\r\nconst reducer = (draft, action) => caseReducer[action.type] && caseReducer[action.type](draft, action.payload)\r\n\r\nfunction useFetch({actions: acts}) {\r\n    const fetchData = ({form}) => {\r\n        if(form) {\r\n            acts.setLoading(true)\r\n            let params = {\r\n                ...form.values,\r\n                page: form.page,\r\n            }\r\n            axios.get(form.url, {params}).then(({data}) => {\r\n                acts.setFormData({key: form.key, data})\r\n                acts.setLoading(false)\r\n            })\r\n        }\r\n    }\r\n\r\n    const fetchColumns = (p) => {\r\n        acts.setLoading(true)\r\n        axios.get(`${p.url}?columns`).then(({data}) => {\r\n            acts.createForm({\r\n                key: p.key,\r\n                url: p.url,\r\n                columns: data.columns,\r\n                filter: data.form\r\n            })\r\n        })\r\n    }\r\n\r\n    const fetchForm = ({form, values}, options, callback) => {\r\n        if(form) {\r\n            acts.setLoading(true)\r\n            axios.post(form.url, values).then(({data}) => {\r\n                acts.setFormData({key: form.key, data})\r\n                callback && callback(data)\r\n                acts.setLoading(false)\r\n            })\r\n        }\r\n    }\r\n\r\n    const refreshData = (p) => fetchData({form: {\r\n        ...pick(p.form, ['key', 'url']),\r\n        page: 1,\r\n    }})\r\n\r\n    return {fetchColumns, fetchData, fetchForm, refreshData}\r\n}\r\n\r\nfunction ContainerProvider({children}) {\r\n    const [state, dispatch] = useImmerReducer(reducer, initialState)\r\n    const actions = mapValues(caseReducer, (v, type) => (payload) => dispatch({type, payload }))\r\n    const fetchFn = useFetch({actions})\r\n\r\n    const value = {\r\n        ...state,\r\n        actions: {\r\n            ...actions,\r\n            ...fetchFn,\r\n        },\r\n        getForm: (key) => get(state, `forms.${key}`, {}),\r\n    }\r\n\r\n    return (\r\n        <ContainerContext.Provider value={value}>\r\n            {children}\r\n        </ContainerContext.Provider>\r\n    )\r\n}\r\n\r\nexport default memo(ContainerProvider)","import React, { memo, useContext } from 'react'\r\nimport { useDidMount, useDidUpdate } from '@ttungbmt/react-hooks'\r\nimport { Modal, ButtonGroup, Button } from 'react-bootstrap'\r\nimport $ from \"jquery\"\r\nimport { keys, isEmpty } from '@ttungbmt/utils'\r\nimport { InnerHTML } from \"@core/components\"\r\n\r\nimport { submitForm, setFormValues } from '@core/components/Form'\r\nimport { ContainerContext } from \"../ContainerProvider\"\r\n\r\nfunction FormModal({html, name: key, form, methods}) {\r\n    const {show, actions: acts} = useContext(ContainerContext)\r\n    const getForm = () => $('#filterForm').find('form')\r\n\r\n    useDidMount(() => {\r\n        form.fields && form.fields.map(f => methods.register(f))\r\n    })\r\n\r\n    useDidUpdate(() => {\r\n        if (show && isEmpty(form.fields)) {\r\n            acts.setFormFields({key, fields: keys(getForm().inputValues())})\r\n        }\r\n    }, [show])\r\n\r\n    const onEntered = () => {\r\n        let values = methods.getValues()\r\n        getForm().inputValues(values)\r\n        $('#drop-phuong1').on('depdrop:afterChange', function (event, id, value, jqXHR, textStatus) {\r\n            getForm().inputValues({maphuong: values.maphuong})\r\n        })\r\n    }\r\n\r\n    const handleFilter = () => {\r\n        setFormValues(getForm().inputValues(), methods)\r\n        submitForm()\r\n        acts.setShow(false)\r\n    }\r\n\r\n    const handleReset = () => {\r\n        let $form = $('#filterForm').find('form').get(0)\r\n        $form && $form.reset()\r\n        methods.reset()\r\n        submitForm()\r\n        acts.setShow(false)\r\n    }\r\n\r\n    return (\r\n        <Modal id=\"filterForm\" show={show} onHide={() => acts.setShow(false)} onEntered={onEntered}>\r\n            <Modal.Header closeButton\r\n                          style={{padding: '10px 10px', borderBottom: '1px solid #ddd'}}>\r\n                <Modal.Title className=\"font-weight-semibold\" style={{fontSize: 17}}><i\r\n                    className=\"icon-filter4 mr-2\"/> Bộ lọc</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <InnerHTML html={html}/>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <ButtonGroup>\r\n                    <Button variant=\"light\" onClick={handleReset} size=\"sm\">\r\n                        Xóa\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleFilter} size=\"sm\">\r\n                        Lọc\r\n                    </Button>\r\n                </ButtonGroup>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default memo(FormModal)","import React, { memo } from 'react'\r\nimport { Row, Col, Form } from 'react-bootstrap'\r\nimport { Field } from '@core/components/Form'\r\nimport { getters as gt } from \"app/Store\"\r\nimport $ from 'jquery'\r\n\r\nimport { submitForm } from '@core/components/Form'\r\n\r\nfunction FormSearch({handleSubmit, register, onSubmit}) {\r\n    let dm_quan = gt.getCat('dm_quan'),\r\n        dm_phuong = gt.getCat('dm_phuong')\r\n\r\n    const onChange = (e) => {\r\n        if(e.target.name === 'maquan') {\r\n            $('#drop-phuong').on('depdrop:afterChange', function(event, id, value, jqXHR, textStatus) {submitForm()})\r\n        } else {\r\n            submitForm()\r\n        }\r\n    }\r\n\r\n    return (\r\n            <Form onSubmit={handleSubmit(onSubmit)}>\r\n                <div style={{padding: '10px 10px 0 10px'}}>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <Field\r\n                                id=\"drop-quan\"\r\n                                as=\"select\"\r\n                                label=\"Quận huyện\"\r\n                                name=\"maquan\"\r\n                                placeholder=\"Chọn quận huyện...\"\r\n                                onChange={onChange}\r\n                                options={dm_quan}\r\n                            />\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <Field\r\n                                id=\"drop-phuong\"\r\n                                as=\"select\"\r\n                                label=\"Phường xã\"\r\n                                name=\"maphuong\"\r\n                                placeholder=\"Chọn phường xã...\"\r\n                                options={dm_phuong}\r\n                                depends={['drop-quan']}\r\n                                onChange={onChange}\r\n                                url={`/api/dm/phuong?role=true`}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </div>\r\n                <input id=\"btn-submit-form\" type=\"submit\" className=\"d-none\"/>\r\n            </Form>\r\n    )\r\n}\r\n\r\nexport default memo(FormSearch)","import React, { memo, useContext } from 'react'\r\nimport { Tooltip } from '@core/components'\r\nimport { Badge } from 'react-bootstrap'\r\nimport { ContainerContext } from \"../ContainerProvider\";\r\n\r\nimport { ToolGroup } from \"./index\"\r\n\r\nfunction NavList({form, name: key, methods, pageQl}) {\r\n    const {actions: acts} = useContext(ContainerContext)\r\n\r\n    const refreshData = () => {\r\n        methods.reset()\r\n        acts.refreshData({form})\r\n    }\r\n\r\n    const items = [\r\n        {title: 'Đến trang quản lý', icon: 'icon-link2', href: pageQl},\r\n        {title: 'Bộ lọc', icon: 'icon-filter4', onClick: () => acts.setShow(true)},\r\n        {title: 'Tải lại trang', icon: 'icon-reset', onClick: refreshData},\r\n    ]\r\n\r\n    return (\r\n        <>\r\n            <ToolGroup items={items}/>\r\n            <div className=\"ml-auto\"><Tooltip title=\"Trang trước\">\r\n                <button onClick={() => acts.prevPage({key})}><i className=\"icon-square-left\"/></button>\r\n            </Tooltip></div>\r\n            <div className=\"align-self-center pl-1 pr-1\">\r\n                <Badge variant=\"success\">{form.page}</Badge>\r\n            </div>\r\n            <div><Tooltip title=\"Trang tiếp theo\">\r\n                <button onClick={() => acts.nextPage({key})}><i className=\"icon-square-right\"/></button>\r\n            </Tooltip></div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(NavList)","import React, { memo } from 'react'\r\nimport { Tooltip } from '@core/components'\r\nimport Box from '@material-ui/core/Box'\r\n\r\nfunction SubTitle({items}) {\r\n    return (\r\n        <Box display=\"flex\" width=\"100%\">\r\n            {items.map(({className, title, icon, onClick, visible = true}, k) => visible && (\r\n                <div key={k} className={className}>\r\n                    <Tooltip title={title} key={k}>\r\n                        <button onClick={onClick}>\r\n                            <i className={icon}/>\r\n                        </button>\r\n                    </Tooltip>\r\n                </div>\r\n            ))}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default memo(SubTitle)","import React, {memo} from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { Tooltip } from '@core/components'\r\n\r\nfunction BtnTool({title, onClick, icon, href, to, link}) {\r\n    let onBtnClick = (e) => {\r\n        e.stopPropagation()\r\n        onClick && onClick(e)\r\n    }\r\n\r\n    let child = <button onClick={onBtnClick}><i className={icon}/></button>\r\n    if(to) child = <Link to={to} onClick={onBtnClick}><i className={icon}/></Link>\r\n    if(href) child = <button onClick={() => window.open(href)}><i className={icon}/></button>\r\n\r\n    if(title) return <Tooltip title={title}>{child}</Tooltip>\r\n\r\n    return child\r\n}\r\n\r\nexport default memo(BtnTool)","import React, { memo } from 'react'\r\nimport BtnTool from \"./BtnTool\"\r\nimport { Tooltip } from '@core/components'\r\n\r\nfunction ToolGroup({items}) {\r\n    return items.map(({className, ...props}, k) => (\r\n        <div className={className} key={k}>\r\n            <BtnTool {...props}/>\r\n        </div>\r\n    ))\r\n}\r\n\r\nexport default memo(ToolGroup)","export {default as FormModal} from './FormModal'\r\nexport {default as FormSearch} from './FormSearch'\r\nexport {default as NavList} from './NavList'\r\nexport {default as SubTitle} from './SubTitle'\r\nexport {default as ToolGroup} from './ToolGroup'\r\nexport {default as BtnTool} from './BtnTool'","import React, { memo } from 'react'\r\nimport { InnerHTML } from '@core/components'\r\nimport { Tooltip } from '@core/components'\r\nimport cx from 'classnames'\r\nimport { isFunction, isUndefined, get, isString } from '@ttungbmt/utils'\r\n\r\nconst FirstColCell= memo(({items, model, html}) => {\r\n    return (\r\n        <div>\r\n            <div className=\"font-weight-semibold\"><InnerHTML html={html}/>\r\n            </div>\r\n            <ul className=\"list-inline mt-1\">\r\n                {items.map(({color, title, icon, href, visible, onClick}, k) => (\r\n                    <li className={cx('list-inline-item', {color})} key={k}>\r\n                        {(visible || isUndefined(visible)) ? (\r\n                            <Tooltip title={title}>\r\n                                {href ? <a href={isFunction(href) ? href(model) : href} target=\"_blank\"><i className={icon}/></a> : <button className=\"btn-link\" onClick={onClick}><i className={icon}/></button>}\r\n                            </Tooltip>\r\n                        ) : ''}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n})\r\n\r\nfunction Cell({index, col, options, model}) {\r\n    let field = col.attribute ? col.attribute : (isString(col.value) ? col.value : ''),\r\n        text = get(model, field, '')\r\n\r\n    return (\r\n        <td>\r\n            {index === 0 ? <FirstColCell items={options.items} html={text} model={model}/> : <InnerHTML html={text}/>}\r\n        </td>\r\n    )\r\n}\r\n\r\nexport default memo(Cell)","import React, { memo } from 'react'\r\nimport { isEmpty } from \"@ttungbmt/utils\";\r\n\r\nfunction Header({form}) {\r\n    if (isEmpty(form.columns)) return <></>\r\n\r\n    return (\r\n        <thead>\r\n        <tr>\r\n            {form.columns.map(({label, width}, k) => <th key={k} style={{width}}>{label}</th>)}\r\n        </tr>\r\n        </thead>\r\n    )\r\n}\r\n\r\n\r\nexport default memo(Header)","import styled from 'styled-components'\r\n\r\nexport default styled.div`\r\n    .table-responsive {height: 100%;}\r\n    .list-inline-item {\r\n        margin-right: 5px;\r\n        cursor: pointer;\r\n        i {font-size: 14px; color: #2196f3}\r\n        button {outline: none;}\r\n    }\r\n`;","import React, { memo, useContext, cloneElement } from 'react'\r\nimport { useDidUpdate, useDidMount } from '@ttungbmt/react-hooks'\r\nimport { ProgressBar } from 'react-bootstrap'\r\n\r\nimport { ContainerContext } from \"../../ContainerProvider\";\r\nimport { Header, Wrapper } from \"./index\";\r\nimport $ from 'jquery'\r\n\r\nfunction TableContent({children, form, style}) {\r\n\r\n    useDidMount(() => {\r\n        setTimeout(() => {\r\n            let $sbBody = $('#sb-body'),\r\n                height = $sbBody.height() - $sbBody.find('form').height()\r\n\r\n            $sbBody.find('.tb-scrollable')\r\n                .css('max-height', height)\r\n                .freezeTable({\r\n                    scrollable: true,\r\n                    shadow: true,\r\n                })\r\n        }, 100)\r\n    })\r\n\r\n    return (\r\n        <table className=\"table table-sm table-bordered\" style={{...style}}>\r\n            <Header form={form}/>\r\n            {cloneElement(children, {form})}\r\n        </table>\r\n    )\r\n}\r\n\r\nfunction Table({style, children, form, name: key, url}) {\r\n    const {loading, actions: acts} = useContext(ContainerContext)\r\n\r\n    useDidMount(() => {\r\n        if (!form.columns) acts.fetchColumns({key, url})\r\n    })\r\n\r\n    useDidUpdate(() => {\r\n        if (form.columns) acts.fetchData({form})\r\n    }, [form.page, JSON.stringify(form.values)])\r\n\r\n\r\n    return (\r\n        <Wrapper>\r\n            <div className=\"table-responsive tb-scrollable\">\r\n                {loading ? <ProgressBar animated now={100} className=\"m-2\"/> : form.columns &&\r\n                    <TableContent form={form} style={style}>{children}</TableContent>}\r\n            </div>\r\n        </Wrapper>\r\n\r\n    )\r\n}\r\n\r\nexport default memo(Table)","export {default as Header} from './Header'\r\nexport {default as Wrapper} from './Wrapper'\r\nexport {default as Table} from './Table'\r\n\r\nexport const getInfoTotal = ({recordsFiltered}) => !recordsFiltered ? '' : `(${recordsFiltered})`\r\n","import React, { memo } from 'react'\r\nimport { InnerHTML } from '@core/components'\r\nimport { useDispatch } from '@ttungbmt/redux-toolkit'\r\nimport { get, map, isEmpty } from '@ttungbmt/utils'\r\nimport { actions as cabenhActs } from \"app/reducers/cabenh\"\r\nimport cx from 'classnames'\r\n\r\nimport Cell from \"../../components/Cell\"\r\n\r\nfunction TableBody({form, setOpen, setItem}) {\r\n    const dispatch = useDispatch()\r\n    const columns = get(form, 'columns')\r\n    const data = get(form, 'data')\r\n    if (!data && isEmpty(get(data, 'data'))) return <></>\r\n\r\n    return (\r\n        <tbody>\r\n        {map(data, (i, k1) => {\r\n            let onRowClick = () => dispatch(cabenhActs.clickCabenh(i)),\r\n                cellOptions = {\r\n                    items: [\r\n                        {\r\n                            title: 'Định vị',\r\n                            color: 'text-success',\r\n                            icon: 'icon-location4',\r\n                            visible: !!i.geometry,\r\n                            onClick: onRowClick\r\n                        },\r\n                        {\r\n                            title: 'Sơ đồ quan hệ', color: 'text-info', icon: 'icon-link2', onClick: (e) => {\r\n                                e.stopPropagation()\r\n                                setOpen(true)\r\n                                setItem(i)\r\n                            }\r\n                        },\r\n                        {\r\n                            title: 'Xem chi tiết',\r\n                            color: 'text-primary',\r\n                            icon: 'icon-pencil7',\r\n                            href: ({id}) => `/admin/cabenh/update?id=${id}`\r\n                        },\r\n                    ]\r\n                },\r\n                colorRow = {\r\n                    'table-danger': i.phanloai === 0,\r\n                }\r\n\r\n\r\n            return (\r\n                <tr key={k1} className={cx(colorRow)} onClick={onRowClick}>\r\n                    {columns.map((props, k2) => <Cell key={k2} index={k2} col={props} options={cellOptions}\r\n                                                      model={i}/>)}\r\n                </tr>\r\n            )\r\n        })}\r\n        </tbody>\r\n    )\r\n}\r\n\r\nexport default memo(TableBody)","import React, { memo, useContext, useState, useEffect } from 'react'\r\nimport { get } from '@ttungbmt/utils'\r\nimport { usePortal } from '@ttungbmt/react-hooks'\r\nimport { useDidMount, useQueryString } from '@ttungbmt/react-hooks'\r\nimport { useDispatch } from '@ttungbmt/redux-toolkit'\r\n\r\nimport { FormContext, useForm } from \"react-hook-form\"\r\nimport { FormSearch, FormModal, NavList } from '../../components'\r\n\r\nimport { setFormValues, submitForm } from '@core/components/Form'\r\nimport { ContainerContext } from \"../../ContainerProvider\";\r\nimport { getInfoTotal, Table } from '../../components/ListTable'\r\nimport { actions as cabenhActs } from 'app/reducers/cabenh'\r\nimport TableBody from \"./TableBody\"\r\nimport { JsPanel } from \"@core/components\";\r\nimport TreeChart from \"./TreeChart\";\r\n\r\nconst KEY = 'cabenh'\r\n\r\nfunction SxhPage({SidebarLayout, defaultValues}) {\r\n    const dispatch = useDispatch()\r\n    const query = useQueryString()\r\n    const {getForm, actions: acts} = useContext(ContainerContext)\r\n    const [isOpen, setOpen] = useState(false)\r\n    const [item, setItem] = useState()\r\n    const form = getForm(KEY)\r\n\r\n    const methods = useForm({defaultValues})\r\n\r\n    useDidMount(() => {\r\n        if (form.values) setFormValues(form.values, methods)\r\n        if (query.id) dispatch(cabenhActs.showPopCabenh(query))\r\n    })\r\n\r\n    const onSubmit = values => {\r\n        acts.setFormValues({key: KEY, values})\r\n    }\r\n\r\n    return (\r\n        <FormContext {...methods} >\r\n            <SidebarLayout\r\n                title={`Ca bệnh SXH ` + getInfoTotal(form)}\r\n                icon={`icon-brain`}\r\n                subTitle={<NavList name={KEY} form={form} methods={methods} pageQl={'/admin/cabenh'}/>}\r\n                content={(\r\n                    <>\r\n                        <FormModal name={KEY} form={form} methods={methods} html={get(form, 'filter', '')}/>\r\n                        <FormSearch form={form} {...methods} onSubmit={onSubmit}/>\r\n                        <Table name={KEY} url={'/maps/cabenh'} form={form} style={{minWidth: 1200}}>\r\n                            <TableBody setOpen={setOpen} setItem={setItem}/>\r\n                        </Table>\r\n                        <JsPanel isOpen={isOpen} setOpen={setOpen} title=\"Sơ đồ quan hệ\" contentSize=\"900 600\">\r\n                            {item && <TreeChart data={item}/>}\r\n                        </JsPanel>\r\n                    </>\r\n                )}\r\n            >\r\n            </SidebarLayout>\r\n        </FormContext>\r\n    )\r\n}\r\n\r\nexport default memo(SxhPage)\r\n\r\n"],"sourceRoot":""}